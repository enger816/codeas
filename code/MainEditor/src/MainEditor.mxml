<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" width="1450" height="850" backgroundAlpha="0" frameRate="60" backgroundColor="#404040"
					   xmlns:s="library://ns.adobe.com/flex/spark" addedToStage="creationCompleteHandler(event)" showStatusBar="false"  title="{AppData.appTitle}"
					   xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		mx|VScrollBar{
			chromeColor: #2d2d2d;
		}
		mx|HScrollBar{
			chromeColor: #2d2d2d;
		}
		mx|ToolTip{
			font-family:            verdana;
			font-size:              12px;
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			
			import PanV2.ConfigV2;
			
			import _Pan3D.load.LoadInfo;
			import _Pan3D.load.LoadManager;
			import _Pan3D.role.MeshDataManager;
			import _Pan3D.scene.SceneContext;
			import _Pan3D.scene.postprocess.PostProcessManager;
			import _Pan3D.texture.TextureManager;
			
			import _me.KeyControl;
			import _me.Scene_data;
			
			import air.update.ApplicationUpdaterUI;
			import air.update.events.UpdateEvent;
			
			import common.AppData;
			
			import materials.Material;
			
			import modules.hierarchy.FileSaveModel;
			import modules.menu.view.MenuView;
			
			import workSave.WorkFileSaveManager;
			

			/** 检查程序版本更新 */
			private var appUpdater:ApplicationUpdaterUI = new ApplicationUpdaterUI();
			private function checkForUpdate():void {   
				appUpdater.updateURL = "http://www.h5key.com/airupdate/MainEditor/output/update.xml";   
				appUpdater.isCheckForUpdateVisible = false;
				appUpdater.addEventListener(UpdateEvent.INITIALIZED, onUpdate);  
				appUpdater.addEventListener(ErrorEvent.ERROR, onError);  
				appUpdater.initialize();
			} 
			private function onError(event:ErrorEvent):void {   
				Alert.show(event.toString());   
			}   
			private function onUpdate(event:UpdateEvent):void {   
				appUpdater.checkNow();
				
			}
			
			
			protected function creationCompleteHandler(event:Event):void
			{
				this.loadSVN()
				checkForUpdate();
				Scene_data.stage = this.stage
				FileSaveModel.getInstance().workSaveFile=WorkFileSaveManager.instance()

					
				ConfigV2.getInstance().init(stage,config_end)
				var xDesc:XML = describeType(Material); 
				
				AppData.mainWindow = this;
				
			}
			private function loadSVN():void
			{
				var loaderinfo : LoadInfo = new LoadInfo("http://192.168.88.5:8818/updateSVN", LoadInfo.XML, function onObjLoad($str : String):void  {
					trace("更新svn完成")
				},0);
				LoadManager.getInstance().addSingleLoad(loaderinfo);
			

				trace("请求加更新SVN")
			}
			
			private function config_end():void
			{
				Scene_data.isDevelop = true;
				TextureManager.getInstance().init(Scene_data.context3D);
				MeshDataManager.getInstance().init(Scene_data.context3D);
				PostProcessManager.getInstance().init(Scene_data.context3D);
				PostProcessManager.getInstance().resize(Scene_data.stageWidth,Scene_data.stageHeight);
				
				var editor:WorldEditor = new WorldEditor;
				editor.init(this,Scene_data.context3D,1);
				this.addElement(editor);
				SceneContext.init();
				
				new MenuView().showMenu();
			
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
</s:WindowedApplication>
