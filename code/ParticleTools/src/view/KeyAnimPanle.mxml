<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="228" height="300" xmlns:view="view.*">
	<fx:Declarations>
		<!-- @author liuyanfei QQ:421537900
			 关键帧运动编辑	
		-->
	</fx:Declarations>
<fx:Script>
	<![CDATA[
		import mx.collections.ArrayCollection;
		import mx.core.UIComponent;
		public var  targetContainer:UIComponent;
		public var targetKeyFrame:MyKeyFrame;//当前编辑的关键帧
		/**
		 * 单例模式构造
		 * */
		private static var instance:KeyAnimPanle;
		public static function getInstance():KeyAnimPanle{
			if(!instance){
				instance = new KeyAnimPanle;
			}
			return instance;
		}
		/**
		 * 显示关键帧，并将数据写入
		 * @param value 关键帧
		 * */
		public function show(value:MyKeyFrame):void{
			targetContainer.addChild(this);
			this.x = (targetContainer.width-this.width)/2;
			this.y = (targetContainer.height-this.height)/2;
			this.targetKeyFrame = value;
			
			for(var i:int;i<cav.numChildren;i++){
				var item:AnimItem = cav.getChildAt(i) as AnimItem;
				item.selected = false;
				item.data = null;
			}
			
			var animData:Array = targetKeyFrame.animData;
			if(animData == null){
				return;
			}
			for(i=0;i<animData.length;i++){
				for(var j:int=0;j<cav.numChildren;j++){
					item = cav.getChildAt(j) as AnimItem;
					if(item.type == animData[i].type){
						item.selected = true;
						item.data = animData[i].data;
						item.setResultData(animData[i].data);
					}
				}
			}
		}
		/**
		 * 显示不同的运动编辑面板
		 * 
		 * */
		private function showEdit(event:Event):void{
			DynamicEditAttributePanle.getInstance().show();
			DynamicEditAttributePanle.getInstance().setData(event.target.sourceData,AnimItem(event.target),AnimItem(event.target).data as Array);
		}
		[Bindable]
		private var  _rotationSelf:ArrayCollection = new ArrayCollection([{text:"起始时间",value:0,type:1},
																		  {text:"终止时间",value:-1,type:1},
																		  {text:"自转角速度",value:0,type:1},
																		  {text:"自转角加速度",value:0,type:1}]);
		[Bindable]
		private var  _rotationByAxis:ArrayCollection = new ArrayCollection([{text:"起始时间",value:0,type:1},
																			{text:"终止时间",value:-1,type:1},
																			{text:"轴方向",value:"0|0|0",type:2},
																			{text:"轴位置",value:"0|0|0",type:2},
																			{text:"转动角速度",value:0,type:1},
																			{text:"转动角加速度",value:0,type:1}]);
		[Bindable]
		private var  _revolution:ArrayCollection = new ArrayCollection([{text:"起始时间",value:0,type:1},
																			{text:"终止时间",value:-1,type:1},
																			{text:"中心点位置",value:"0|0|0",type:2},
																			{text:"离心速度",value:0,type:1},
																			{text:"离心加速度",value:0,type:1}]);
		[Bindable]
		private var  _colorChg:ArrayCollection = new ArrayCollection([{text:"起始时间",value:0,type:1},
																			{text:"终止时间",value:-1,type:1},
																			{text:"R改变值",value:0,type:1},
																			{text:"G改变值",value:0,type:1},
																			{text:"B改变值",value:0,type:1},
																			{text:"A改变值",value:0,type:1}]);
		[Bindable]
		private var  _colorAnim:ArrayCollection = new ArrayCollection([{text:"起始时间",value:0,type:1},
																		{text:"终止时间",value:-1,type:1},
																		{text:"初始颜色",value:0,type:3},
																		{text:"目标色彩数",value:0,type:1},
																		{text:"目标颜色1",value:0,type:3},
																		{text:"过渡间隔",value:0,type:1},
																		{text:"目标颜色2",value:0,type:3},
																		{text:"过渡间隔",value:0,type:1},
																		{text:"目标颜色3",value:0,type:3},
																		{text:"过渡间隔",value:0,type:1},
																		{text:"目标颜色4",value:0,type:3},
																		{text:"过渡间隔",value:0,type:1},
																		{text:"目标颜色5",value:0,type:3},
																		{text:"过渡间隔",value:0,type:1}]);
		[Bindable]
		private var  _scaleChg:ArrayCollection = new ArrayCollection([{text:"起始时间",value:0,type:1},
																		{text:"终止时间",value:-1,type:1},
																		{text:"比例改变值",value:0,type:1},
																		{text:"最小比例",value:0.11,type:1},
																		{text:"最大比例",value:999,type:1}]);
		[Bindable]
		private var  _scaleAnim:ArrayCollection = new ArrayCollection([{text:"起始时间",value:0,type:1},
																		{text:"终止时间",value:-1,type:1},
																		{text:"初始比例",value:0,type:1},
																		{text:"目标比例数",value:0,type:1},
																		{text:"目标比例1",value:0,type:1},
																		{text:"过渡间隔",value:100,type:1},
																		{text:"目标比例2",value:0,type:1},
																		{text:"过渡间隔",value:100,type:1},
																		{text:"目标比例3",value:0,type:1},
																		{text:"过渡间隔",value:100,type:1},
																		{text:"目标比例4",value:0,type:1},
																		{text:"过渡间隔",value:100,type:1},
																		{text:"目标比例5",value:0,type:1},
																		{text:"过渡间隔",value:100,type:1}]);
//		[Bindable]
//		private var  _scaleAnim:ArrayCollection = new ArrayCollection([{text:"起始时间",value:0,type:1},
//			{text:"终止时间",value:-1,type:1},
//			{text:"初始比例",value:1,type:1},
//			{text:"目标比例数",value:2,type:1},
//			{text:"目标比例1",value:2,type:1},
//			{text:"过渡间隔",value:1000,type:1},
//			{text:"目标比例2",value:1,type:1},
//			{text:"过渡间隔",value:1000,type:1},
//			{text:"目标比例3",value:0,type:1},
//			{text:"过渡间隔",value:100,type:1},
//			{text:"目标比例4",value:0,type:1},
//			{text:"过渡间隔",value:100,type:1},
//			{text:"目标比例5",value:0,type:1},
//			{text:"过渡间隔",value:100,type:1}]);
		[Bindable]
		private var  _scaleRandom:ArrayCollection = new ArrayCollection([{text:"起始时间",value:0,type:1},
																			{text:"终止时间",value:-1,type:1},
																			{text:"振幅",value:0,type:1},
																			{text:"波长",value:0,type:1}]);
		[Bindable]
		private var  _move:ArrayCollection = new ArrayCollection([{text:"起始时间",value:0,type:1},
																			{text:"终止时间",value:-1,type:1},
																			{text:"移动方向",value:"0|0|0",type:2},
																			{text:"移动速度",value:0,type:1},
																			{text:"移动加速度",value:0,type:1}]);
		/**
		 * 获取所有的数据
		 * 
		 * */
		private function getAllData():Array{
			var ary:Array = new Array;
			for(var i:int;i<cav.numChildren;i++){
				var item:AnimItem = cav.getChildAt(i) as AnimItem;
				if(item.selected && item.resultData){
					ary.push(item.getAllData());
				}
			}
			return ary;
		}
		/**
		 * 获取运动编辑面板的更新
		 * */
		private function itemChange(event:Event):void{
	
			var animItem:AnimItem = event.target as AnimItem;
			if(!animItem.resultData){
				showEdit(event);
				if(animItem.selected){
					animItem.selected = false;
				}
			}else{
		
				var ary:Array = getAllData();
				targetKeyFrame.animData = ary;
				targetKeyFrame.dispatchEvent(new Event(Event.CHANGE));
			}
		}
		/**
		 * 关闭 从舞台移除
		 * 
		 * */
		private function close():void{
			if(this.parent){
				this.parent.removeChild(this);
			}
		}
		
	]]>
</fx:Script>
	<mx:Panel width="228" height="300"/>
	<mx:Canvas id="cav">
		<view:AnimItem id="type1" x="29" y="48" label="自转" rightClick="showEdit(event)" sourceData="{_rotationSelf}" type="1" change="itemChange(event)"/>
		<view:AnimItem id="type2" x="29" y="71" label="绕轴转动" rightClick="showEdit(event)" sourceData="{_rotationByAxis}" type="2" change="itemChange(event)"/>
		<view:AnimItem id="type3" x="29" y="95" label="离心运动" rightClick="showEdit(event)" sourceData="{_revolution}" type="3" change="itemChange(event)"/>
		<view:AnimItem id="type4" x="29" y="119" label="色彩改变" rightClick="showEdit(event)" sourceData="{_colorChg}" type="4" change="itemChange(event)"/>
		<view:AnimItem id="type5" x="29" y="142" label="色彩过渡" rightClick="showEdit(event)" sourceData="{_colorAnim}" type="5" change="itemChange(event)" enabled="false"/>
		<view:AnimItem id="type6" x="29" y="165" label="比例改变" rightClick="showEdit(event)" sourceData="{_scaleChg}" type="6" change="itemChange(event)"/>
		<view:AnimItem id="type7" x="29" y="187" label="比例过渡" rightClick="showEdit(event)" sourceData="{_scaleAnim}" type="7" change="itemChange(event)"/>
		<view:AnimItem id="type8" x="29" y="210" label="噪音比例" rightClick="showEdit(event)" sourceData="{_scaleRandom}" type="8" change="itemChange(event)"/>
		<view:AnimItem id="type9" x="29" y="233" label="平移" rightClick="showEdit(event)" sourceData="{_move}"  type="9" change="itemChange(event)"/>
	</mx:Canvas>
	<mx:Button x="80" y="266" label="确定" click="close()"/>
	<mx:HBox width="228" height="31" mouseDown="startDrag()" mouseUp="stopDrag()" backgroundColor="#ffffff" backgroundAlpha="0"/>
</mx:Canvas>
