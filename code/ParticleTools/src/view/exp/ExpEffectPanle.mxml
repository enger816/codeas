<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="568" height="350">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
<fx:Script>
	<![CDATA[
		import _me.Scene_data;
		
		import com.maclema.mysql.ResultSet;
		
		import db.DBManager;
		
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.events.CloseEvent;
		import mx.events.ListEvent;
		
		private var isFirst:Boolean = true;
		private var _info:Array;
		private var _defaultStr:String = "输入对此特效的描述";

		private var selectObj:Object;
		private var _keyUrl:String;
		private var urlStr:String;
		public function show(container:DisplayObjectContainer):void{
			container.addChild(this);
			
			if(isFirst){
				this.x = (container.width - this.width)*0.5;
				this.y = (container.height - this.height)*0.5;
			}
			isFirst = false;
			
			urlStr = AppParticleData.lyfUrl.substr(AppParticleData.particleNativeRoot.length);
			var reg:RegExp = /\\/g;
			urlStr = urlStr.replace(reg,"/");
			expTitle.htmlText = "路径名称：<font color='#ff0000'>" + urlStr + "</font>";
			
			setData();
		}
		
		public function setData():void{
			var sql:String =  "select * from t_avatars_scene_effect where f_source_name='" + urlStr +"'";
			DBManager.getInstance().executeQuery(sql,querySuc,error);
		}
		
		private function error(value:*):void
		{
			trace(value);
		}
		
		private function querySuc(rs:ResultSet):void{
			var ary:Object = new ArrayCollection;
			while(rs.next()){
				var obj:Object = new Object;
				obj.id = rs.getInt("f_id");
				obj.name = rs.getString("f_source_name");
				obj.desc = rs.getString("f_desc");
				obj.pos = rs.getInt("f_xpos") + "," + rs.getInt("f_ypos");
				obj.version = rs.getInt("f_version");
				ary.addItem(obj);
			}
			dg.dataProvider = ary;
		}
		
		protected function descTxt_clickHandler(event:MouseEvent):void{
			if(descTxt.text == _defaultStr){
				descTxt.text = "";
			}
			
		}
		
		protected function dg_itemClickHandler(event:ListEvent):void
		{
			descTxt.text = dg.selectedItem.desc;
		}
		
		public function updateBuff():void{
			if(!AppParticleData.isAuthorize){
				Alert.show("没有被授权！");
				return;
			}
			
			var _pos:Point = new Point;
			_pos.x = (-AppParticleData.backLevel.x + Scene_data.stageWidth/2 + AppParticleData.posOffsetPoint.x)
			_pos.y = (-AppParticleData.backLevel.y + Scene_data.stageHeight/2 + AppParticleData.posOffsetPoint.y);
			
			selectObj = dg.selectedItem;
			if(!selectObj){
				Alert.show("请选择要更新的条目")
				return;
			}
			var sql:String = "update t_avatars_scene_effect set f_version=" + (selectObj.version+1) + ",f_desc='" + descTxt.text + "',f_xpos=" + _pos.x + ",f_ypos=" + _pos.y  + " where f_id=" + selectObj.id;
			DBManager.getInstance().executeUpdate(sql,updateSuc,error);
			
		}
		public function updateSuc(value:Object):void{
			//updataFile(selectObj.id);
			Alert.show("更新成功");
			setData();
		}
		
		public function insertBuff():void{
			if(!AppParticleData.isAuthorize){
				Alert.show("没有被授权！");
				return;
			}
			if(descTxt.text == _defaultStr){
				Alert.show("请输入对此装备的描述！！");
				return;
			}
			if(!AppParticleData.mapdata){
				Alert.show("还没有载入地图！");
				return;
			}
			var sql:String =  "select * from t_avatars_particle where f_name='" + urlStr +"'";
			DBManager.getInstance().executeQuery(sql,queryAvatarsSuc,error);

		}
		private var sourceObj:Object;
		private function queryAvatarsSuc(rs:ResultSet):void{
			var _pos:Point = new Point;
			_pos.x = (-AppParticleData.backLevel.x + Scene_data.stageWidth/2 + AppParticleData.posOffsetPoint.x);
			_pos.y = (-AppParticleData.backLevel.y + Scene_data.stageHeight/2 + AppParticleData.posOffsetPoint.y);
			if(rs.next()){
				var obj:Object = new Object;
				obj.id = rs.getInt("f_id");
				obj.name = rs.getString("f_name");
				sourceObj = obj;
				
				var sql:String =  "insert into t_avatars_scene_effect (f_source_id,f_source_name,f_xpos,f_ypos,f_desc,f_map_id) value(" + obj.id + ",'" + obj.name + "'," + _pos.x + "," + _pos.y + ",'" + descTxt.text + "'," + AppParticleData.mapdata.id + ");";
				DBManager.getInstance().executeUpdate(sql,insertSuc,error);
			}else{
				Alert.show("该特效还没有导出");
			}
		}
		
		private function insertSuc(obj:Object=null):void{
			var sqlId:int = obj.insertID;
			
			//updataFile(sqlId);
			Alert.show("数据保存成功");
			setData();
		}
		
		private var delObj:Object;
		private function delBuff():void{
			if(!AppParticleData.isAuthorize){
				Alert.show("没有被授权！");
				return;
			}
			delObj = dg.selectedItem;
			if(delObj){
				
				Alert.show("确认删除？","警告",Alert.YES | Alert.NO,null,sureDel);
			}
			
		}
		
		private function sureDel(evt:CloseEvent):void{
			if(evt.detail == 1){
				var sql:String =  "delete from t_avatars_scene_effect  where (f_id=" + delObj.id + ")";
				DBManager.getInstance().executeUpdate(sql,delSuc,error);
			}
		}
		
		private function delSuc(obj:Object=null):void{
			Alert.show("删除成功");
			setData();
		}

		private function close():void{
			if(this.parent){
				this.parent.removeChild(this);
			}
		}
		
	]]>
</fx:Script>
	<mx:Panel width="100%" height="100%"/>
	<mx:Label id="expTitle" x="13" y="44" width="265" text="正在导出：1.lyf"/>
	<mx:TextArea id="descTxt" x="13" y="266" width="545" height="40" text="输入对此特效的描述" click="descTxt_clickHandler(event)"/>
	<mx:Label x="13" y="68" width="265" text="查询到已经存在可能相关特效"/>
	<mx:DataGrid id="dg" x="13" y="95" width="545" height="163" itemClick="dg_itemClickHandler(event)">
		<mx:columns>
			<mx:DataGridColumn dataField="id" headerText="id" width="50"/>
			<mx:DataGridColumn dataField="name" headerText="根路径" />
			<mx:DataGridColumn dataField="desc" headerText="描述" />
			<mx:DataGridColumn dataField="pos" headerText="位置" />
			<mx:DataGridColumn dataField="version" headerText="版本号" width="45" />
		</mx:columns>
	</mx:DataGrid>
	<mx:Button x="30" y="314" label="更新特效" click="updateBuff()"/>
	<mx:Button x="110" y="314" label="添加特效" click="insertBuff()"/>
	<mx:Button x="189" y="314" label="删除特效" click="delBuff()"/>
	<mx:Button x="271" y="314" label="关闭" click="close()"/>
	<mx:Label x="7" y="6" width="243" fontWeight="bold" text="场景特效导出"  mouseDown="startDrag()" mouseUp="stopDrag()"/>
</mx:Canvas> 