<?xml version="1.0" encoding="utf-8"?>
<frame:BasePanel xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:frame="common.utils.frame.*"
		   xmlns:s="library://ns.adobe.com/flex/spark"  creationComplete="initView()" addedToStage="onStage()"
		   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:view="view.*" xmlns:component="view.component.*">
	<fx:Declarations>
		<!-- @author liuyanfei QQ:421537900 
		
			时间轴控制中心类，控制所有有关时间轴的操作
		
		-->
	</fx:Declarations>
<fx:Script>
	<![CDATA[
		import mx.controls.CheckBox;
		import mx.events.FlexEvent;
		
		import _me.Scene_data;
		
		import common.utils.ui.curves.CurvesUI;
		
		import utils.ParticleManagerTool;
		
		import view.countView.CountPanle;
		
		private static var _instance:ControlCenterView;
		public static function getInstance():ControlCenterView{
			if(!_instance){
				_instance = new ControlCenterView;
			}
			return _instance;
		}
		
		
		private var _particleList:ParticleList = new ParticleList;
		/**
		 * 初始化参数和界面
		 * */
		private function initView():void{
			setFrameNum(3500);
			initPlayHead();
			KeyAttributPanle.getInstance().targetContainer = this.parent as UIComponent;
			KeyAnimPanle.getInstance().targetContainer = this.parent as UIComponent;
			DynamicEditAttributePanle.getInstance().targetContainer = this.parent as UIComponent;
			
		}
		private function onStage():void{
			stage.addEventListener(KeyboardEvent.KEY_DOWN,onKey);
		}
		/**
		 * 设置遮罩，控制时间轴区域的显示
		 * */
		private function initMask():void{
			var uimask:UIComponent = new UIComponent;
			uimask.graphics.beginFill(0xff0000);
			uimask.drawRoundRect(0,0,10000,208);
			uimask.x = 100;
			uimask.y = 30;
			this.addChild(uimask);
			timelineUI.mask = uimask;
		}
		/**
		 * 点击添加粒子，弹出面板选择粒子类型
		 * */
		private function onAddClick():void{
			_particleList.show(UIComponent(this.parent.parent),320,100,addParticle);
		}
		/**
		 * 添加粒子
		 * @param type 粒子类型
		 * */
		public function addParticle(type:int):void{
			var par:ParticleItem = new ParticleItem(type);//粒子条目
			var timeline:TimeLineSprite = new TimeLineSprite();//时间轴
			timelineUI.addChildAt(timeline,0);
			timeline.y = 30 + list.dataProvider.length*20;
			par.timeline = timeline;
			timeline.particleItem = par;
			list.addItem(par);
			ParticleManagerTool.getInstance().addTimeLine(timeline);
			var tempview:DynamicAttributePanle = AllAttributePanle.getInstance().showParticle(type);//面板写入新数据
			if(tempview.hasCreat){
				tempview.setDefauleAllInfo();
			}
			tempview.setData(AppParticleData.display3dParticle);
			
			
			if(CountPanle.instance){
				CountPanle.instance.refreshInfo();
			}
		}
		
		/**
		 * 按钮播放控制
		 * Q 播放
		 * W 上一帧
		 * E 下一帧
		 * R 停止
		 * */
		private function onKey(event:KeyboardEvent):void{
			if(event.keyCode == Keyboard.NUMBER_1){
				play();
			}else if(event.keyCode ==  Keyboard.NUMBER_2){
				pause();
			}else if(event.keyCode ==  Keyboard.NUMBER_3){
				nextFrame();
			}else if(event.keyCode ==  Keyboard.NUMBER_4){
				stop();
			}
		}
		/**
		 * 播放
		 * */
		public function play():void{
			this.addEventListener(Event.ENTER_FRAME,onPlay);
			ParticleManagerTool.getInstance().start();
			time = getTimer();
		}
		/**
		 * 上一帧（原做暂停用，已更改）
		 * */
		public function pause():void{
			this.removeEventListener(Event.ENTER_FRAME,onPlay);
			var frame:int = ParticleManagerTool.getInstance().frame;
			frame = frame-1;
			if(frame < 1){
				frame = 1;
			}
			ParticleManagerTool.getInstance().gotoAndStop(frame);
			if(playhead)
				playhead.x = ParticleManagerTool.getInstance().frame*8;
			if(AppParticleData.role)
				AppParticleData.role.gotoAndStop(ParticleManagerTool.getInstance().frame/2);
			setCurvesUITime();
		}
		/**
		 * 停止播放
		 * */
		public function stop():void{
			this.removeEventListener(Event.ENTER_FRAME,onPlay);
			ParticleManagerTool.getInstance().reset();
			playhead.x = ParticleManagerTool.getInstance().frame*8;
			if(AppParticleData.role)
				AppParticleData.role.gotoAndStop(ParticleManagerTool.getInstance().frame/2);
			setCurvesUITime();
		}
		
		/**
		 * 播放更新，核心函数
		 * */
		private function onPlay(event:Event):void{
			ParticleManagerTool.getInstance().update();
			playhead.x = ParticleManagerTool.getInstance().frame*8;
			if(AppParticleData.role){
				AppParticleData.role.skillMode = true;
				AppParticleData.role.gotoAndStop(ParticleManagerTool.getInstance().frame/2);
			}
			setCurvesUITime();
		} 
		/**
		 * 下一帧
		 * */
		public function nextFrame():void{
			this.removeEventListener(Event.ENTER_FRAME,onPlay);
			ParticleManagerTool.getInstance().updateByFrame();
			playhead.x = ParticleManagerTool.getInstance().frame*8;
			if(AppParticleData.role)
				AppParticleData.role.gotoAndStop(ParticleManagerTool.getInstance().frame/2);
			setCurvesUITime();
		}
		/**
		 * 跳帧
		 * */
		private function gotoAndPlay():void{
			var frame:int = timelineUI.mouseX/8;
			ParticleManagerTool.getInstance().gotoAndStop(frame);
			playhead.x = ParticleManagerTool.getInstance().frame*8;
			if(AppParticleData.role)
				AppParticleData.role.gotoAndStop(ParticleManagerTool.getInstance().frame/2);
			setCurvesUITime();
		}
		
		private function setCurvesUITime():void{
			if(!AppParticleData.currentParticleItem){
				return;
			}
			var frameNum:int = ParticleManagerTool.getInstance().frame - AppParticleData.currentParticleItem.timeline.getBeginFrame();
			CurvesUI.getInstance().showTime(frameNum*Scene_data.frameTime);
		}
		
		private var time:int;
		
		private var baseW:int = 8;
		/**
		 * 设置总帧数 
		 * 绘制相应的面板
		 * */
		public function setFrameNum(num:int):void{
			var bitmapdata:BitmapData = new BitmapData(8*num,300,true,0xff2a2a2a);
			var bitmapdataBg:BitmapData = new BitmapData(8*num,30,true,0xff2a2a2a);
			var sp1:Shape = new Shape();
			sp1.graphics.beginFill(0x505050,1);
			sp1.graphics.lineStyle(1,0x353535);
			sp1.graphics.drawRect(0,0,baseW,20);
			sp1.graphics.endFill();
			
			var sp2:Shape = new Shape();
			sp2.graphics.beginFill(0x404040,1);
			sp2.graphics.lineStyle(1,0x353535);
			sp2.graphics.drawRect(0,0,baseW,20);
			sp2.graphics.endFill();
			
			var txt:TextField = new TextField();
			txt.width = 25;
			txt.height = 20;
			var ma:Matrix = new Matrix();
			ma.ty = 30;
			var txtma:Matrix = new Matrix();
			txtma.ty = 15;
			for(var j:int=0;j<10;j++){
				for(var i:int=0;i<num;i++){
					if(i%5){
						bitmapdata.draw(sp1,ma);
					}else{
						if(j==0){
							txt.htmlText = "<font size='10' face='Microsoft Yahei' color='#666666'>" + i + "</font>"
							bitmapdataBg.draw(txt,txtma);
						}
						bitmapdata.draw(sp2,ma);
					}
					ma.tx = i*baseW;
					txtma.tx = i*baseW;
				}
				ma.ty += 20;
			}
			
			txtma.tx = 0;
			txtma.ty = 0;
			ma.tx = 0;
			ma.ty = 12;
			sp1.graphics.clear();
			sp1.graphics.lineStyle(1,0x777777);
			sp1.graphics.moveTo(0,-2);
			sp1.graphics.lineTo(0,7);
			sp1.graphics.moveTo(0,0);
			sp1.graphics.lineTo(50,0);
			
			for(i=0;i<num;i+=6){
				txtma.tx = i*baseW;
				ma.tx = i*baseW;
				txt.htmlText = "<font size='10' face='Microsoft Yahei' color='#666666'>" + (i/6*100) + "</font>"
				bitmapdataBg.draw(txt,txtma);
				bitmapdataBg.draw(sp1,ma);
				
			}
			
			var bitmap:Bitmap = new Bitmap(bitmapdata);
			ui.addChild(bitmap);
			ui.width = bitmap.width;
			
//			sp1.graphics.clear();
//			sp1.graphics.beginFill(1,0x444444);
//			sp1.graphics.drawRect(0,0,8*num,3);
//			sp1.graphics.endFill();
//			ma.identity();
//			ma.translate(0,28);
//			bitmapdataBg.draw(sp1,ma);
			
			bitmap = new Bitmap(bitmapdataBg);
			bitmap.y = -3;
			graduation.addChild(bitmap);
			
		}
		/* public function addTimeLine():void{
			var timeline:TimeLineSprite = new TimeLineSprite();
			ui.addChild(timeline);
			timeline.y = 30;
		}
		 */
		private var playhead:Shape
		/**
		 * 初始化播放头
		 * */
		private function initPlayHead():void{
			playhead = new Shape();
			playhead.graphics.lineStyle(1,0xCC0000);
			playhead.graphics.beginFill(0xCC0000,0.5);
			playhead.graphics.drawRect(0,0,baseW,20);
			playhead.graphics.endFill();
			playhead.graphics.lineStyle(1,0xCC0000);
			playhead.graphics.moveTo(baseW/2,20);
			playhead.graphics.lineTo(baseW/2,500);
			head.addChild(playhead);
		}
		/**
		 * 上下滚动时间轴
		 * */
		private function myscoll():void{
			list.scollNum(vb.scrollPosition);
			timelineUI.y = list.ypos;
		}
		/**
		 * 获取当前所有时间轴信息
		 * */
		public function getAllInfo():Object{
			return list.getAllInfo();
		}
		/**
		 * 从文件数据中，重建当前时间轴
		 * */
		public function buildStateByFile(ary:Array):void{
			for(var i:int;i<ary.length;i++){
				var par:ParticleItem = new ParticleItem(ary[i].display.particleType);
				par.setData(ary[i].display);
				var timeline:TimeLineSprite = new TimeLineSprite(false);
				timelineUI.addChildAt(timeline,0);
				timeline.setAllInfo(ary[i].timeline);
				timeline.y = 30 + list.dataProvider.length*20;
				par.timeline = timeline;
				timeline.particleItem = par;
				//ary.addItem(par);
				list.addItem(par);
				ParticleManagerTool.getInstance().addTimeLine(timeline);
			}
			
			if(CountPanle.instance){
				CountPanle.instance.refreshInfo();
			}
		}
		/**
		 * 从单个数据中重建时间轴
		 * */
		public function addParticleByObj(obj:Object):void{
			var par:ParticleItem = new ParticleItem(obj.display.particleType);
			par.setData(obj.display);
			var timeline:TimeLineSprite = new TimeLineSprite(false);
			timelineUI.addChildAt(timeline,0);
			timeline.setAllInfo(obj.timeline);
			timeline.y = 30 + list.dataProvider.length*20;
			par.timeline = timeline;
			timeline.particleItem = par;
			//ary.addItem(par);
			list.addItem(par);
			ParticleManagerTool.getInstance().addTimeLine(timeline);
		}
		/**
		 * 销毁所有内容和信息
		 * */
		public function delAll():void{
			list.delAll();
		}
		
		private function selectAll(value:Boolean=false):void
		{
			for(var i:int=0;i<list.dataProvider.length;i++){
				var par:ParticleItem =  list.dataProvider[i];
				if(value)
				{
					par.isShow = true;
				}else{
					par.isShow = !par.isShow;
				}
			
			}
		}
		
		protected function vb_mouseWheelHandler(event:MouseEvent):void
		{
			var listNumchildren:int=list._ui.numChildren;
			if(listNumchildren<=8)
			{
				list.scollNum(0);
				timelineUI.y=list.ypos;
			}
			var vNum:int=event.delta;
			if(vNum<0)
			{
				if(vb.scrollPosition<vb.maxScrollPosition){
					vb.scrollPosition++;
				}
			}
			else
			{
				if(vb.scrollPosition>vb.minScrollPosition){
					vb.scrollPosition--;
				}
			}
			list.scollNum(vb.scrollPosition);
			timelineUI.y = list.ypos;
		}
		
	]]>
</fx:Script>
	<mx:Canvas width="100%" height="208" backgroundColor="#888888"  >
		<mx:Canvas id="cav" left="130" right="2" height="100%" verticalScrollPolicy="off">
			<mx:Canvas id="maskCav" top="30" bottom="0" width="100%" backgroundColor="#000000" />
			<mx:UIComponent id="ui"  mouseWheel="vb_mouseWheelHandler(event)"/>
			<mx:UIComponent id="timelineUI"  mouseWheel="vb_mouseWheelHandler(event)"/>
			<mx:UIComponent id="graduation"/>
			<mx:UIComponent id="head" mouseChildren="false" mouseEnabled="false"/>
			<mx:Canvas width="100%" height="30"  click="gotoAndPlay()" backgroundColor="#ffffff" backgroundAlpha="0"/>
		</mx:Canvas>
		<view:MyList id="list" y="30" width="150" height="160" mouseWheel="vb_mouseWheelHandler(event)">
			
		</view:MyList>
		<mx:VScrollBar id="vb" visible="{list.dataProvider.length &gt; 8}" y="30" right="0" height="162"
					   maxScrollPosition="{list.dataProvider.length-8}" minScrollPosition="0" scroll="myscoll()" mouseWheel="vb_mouseWheelHandler(event)"/>
		<mx:Canvas width="130" height="30" backgroundColor="#505050"/>
		<component:ImageButton x="10" y="6" source="assets/buttonIcon/add.png" toolTip="添加" click="onAddClick()"/>
		<component:ImageButton x="40" y="6" source="assets/buttonIcon/selectAll.png" toolTip="全选" click="selectAll(true)"/>
		<component:ImageButton x="70" y="6" source="assets/buttonIcon/unSelect.png" toolTip="反选" click="selectAll(false)"/>
	</mx:Canvas>
</frame:BasePanel> 
