<?xml version="1.0" encoding="utf-8"?>
<frame:BasePanel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" backgroundColor="#404040" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="400" creationComplete="onCom()" xmlns:cbox="common.utils.ui.cbox.*" xmlns:txt="common.utils.ui.txt.*" xmlns:curves="common.utils.ui.curves.*" xmlns:frame="common.utils.frame.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
		<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		.txtSty{
			contentBackgroundColor : #404040;
			borderVisible:true;
			color:#9f9f9f;
		}
	</fx:Style>
<fx:Script>
	<![CDATA[
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.events.AIREvent;
		import mx.events.FlexEvent;
		
		import spark.components.Window;
		
		import _me.Scene_data;
		import _me.xyzPos.XyzPosData;
		
		import manager.LayerManager;
		
		import view.bone.BonePanel;
		import view.controlCenter.configSkill.ConfigPoint;
		
		import xyz.MoveScaleRotationLevel;
		import xyz.base.TooXyzPosData;
		import xyz.draw.TooXyzMoveData;
		
		
		
		
		
		
		
		private var isFirst:Boolean = true;
		/**
		 * 传入的信息
		 * */
		private var _info:Object;
		/**
		 * 回调函数
		 * */
		private var _fun:Function;
		
		/**
		 * 粒子信息
		 * */
		private var particleInfo:Object;
		
		[Bindable]
		private var _editMode:Boolean;
		
		private static var _instance:EffectSkillPanel;
		private var win:Window;

		private var xyzPosData:TooXyzMoveData; 
		
		private var configPointPanle:ConfigPoint = new ConfigPoint();
		
		private var _configData:Object;
		
		private var _selectIndex:int;
		
		
		
		public static function getInstance():EffectSkillPanel{
			if(!_instance){
				_instance = new EffectSkillPanel;
				_instance.init(null,"属性",2);
			}
			return _instance;
		}
		/**
		 * 配置combobox选项
		 * */
		private function onCom():void{
			var ary:Array = [{id:0,name:"定点(类型：4)"},{id:1,name:"指定定点(类型：5)"},{id:2,name:"绑定插孔(类型：6)"}];
			var arr:ArrayCollection = new ArrayCollection(ary);
			
			cbox.data = ary;
			cbox.changFun = cBoxChange;
			
			
			fixPos.changFun = posChange;
			fixRotation.changFun = rotationChange;
			
			onCreatCom();
		}
		
		private function onCreatCom():void{
			if(_editMode){
				setAllInfo(_info);
			}
		}
		
		
		private function cBoxChange(obj:Object):void{
			vs.selectedIndex = obj.id;
			
			if(obj.id == 0){
				MoveScaleRotationLevel.getInstance().xyzMoveData = xyzPosData;
			}else{
				MoveScaleRotationLevel.getInstance().xyzMoveData = null;
			}
			
			refreshInfo();
			
		}
		
		/**
		 * 显示
		 * */
		public function showPanel(info:Object,fun:Function,editMode:Boolean,configData:Object):void{
			_info = info;
			_fun = fun;
			_configData = configData;
			
			initXyzCtrl();
			
			if(editMode){
				setAllInfo(info);
			}
			_editMode = editMode;
			
			if(addBtn){
				addBtn.visible = !_editMode;
			}
			
			LayerManager.getInstance().addPanel(this,true);
			
			return;
			win = new Window();
			win.transparent=false;
			win.type=NativeWindowType.UTILITY;
			win.systemChrome=NativeWindowSystemChrome.STANDARD;
			win.width=240;
			win.height=400;
			win.showStatusBar = false;
			win.addElement(this);
			win.alwaysInFront = true;
			win.resizable = false;
			win.setStyle("fontFamily","Microsoft Yahei");
			win.setStyle("fontSize",11); 
			win.addEventListener(AIREvent.WINDOW_COMPLETE,onWinCom);
			win.title = "效果配置";
			win.open(true);
			
		}
		
		private function initXyzCtrl():void{
			var temp:XyzPosData = new XyzPosData();
			temp.x = 0;
			temp.y = 0;
			temp.z = 0;
			temp.angle_x=0;
			temp.angle_y=0;
			temp.angle_z=0;
			
			xyzPosData=new TooXyzMoveData;
			xyzPosData.dataItem=new Vector.<TooXyzPosData>;
			xyzPosData.modelItem=new Array;
			
			var tempxyzPosData:XyzPosData=temp;
			var k:TooXyzPosData=new TooXyzPosData;
			k.x=tempxyzPosData.x;
			k.y=tempxyzPosData.y;
			k.z=tempxyzPosData.z;
			k.scale_x=1;
			k.scale_y=1;
			k.scale_z=1;
			k.angle_x=tempxyzPosData.angle_x;
			k.angle_y=tempxyzPosData.angle_y;
			k.angle_z=tempxyzPosData.angle_z;
			xyzPosData.dataItem.push(k);
			xyzPosData.modelItem.push(tempxyzPosData);
			
			xyzPosData.fun=xyzBfun;
			xyzPosData.isCenten=true;
			MoveScaleRotationLevel.getInstance().xyzMoveData=xyzPosData;
		}
		
		private function posChange(v3d:Vector3D):void{
			xyzPosData.x = v3d.x;
			xyzPosData.y = v3d.y;
			xyzPosData.z = v3d.z;
			
			if(Boolean(xyzPosData.dataUpDate)){
				xyzPosData.dataUpDate()
			}
			refreshInfo();
		}
		
		private function rotationChange(v3d:Vector3D):void{
			xyzPosData.angle_x = v3d.x;
			xyzPosData.angle_y = v3d.y;
			xyzPosData.angle_z = v3d.z;
			
			if(Boolean(xyzPosData.dataUpDate)){
				xyzPosData.dataUpDate()
			}
			refreshInfo();
		}
		
		protected function onWinCom(event:AIREvent):void
		{
			Window(event.target).nativeWindow.x=Scene_data.stage.nativeWindow.x+Scene_data.stage.stageWidth/2-Window(event.target).nativeWindow.width/2;
			Window(event.target).nativeWindow.y=Scene_data.stage.nativeWindow.y+Scene_data.stage.stageHeight/2-Window(event.target).nativeWindow.height/2;
		}
		
		
		
		public function xyzBfun($XyzMoveData:xyz.draw.TooXyzMoveData):void{
			var tooXyzPosData:TooXyzPosData;
			tooXyzPosData=$XyzMoveData.dataItem[0];
			
			fixPos.ve3Data = new Vector3D(tooXyzPosData.x,tooXyzPosData.y,tooXyzPosData.z);
			
			fixRotation.ve3Data = new Vector3D(tooXyzPosData.angle_x,tooXyzPosData.angle_y,tooXyzPosData.angle_z);
			
			refreshInfo();
		}
		
		protected function posMouseOverHandler(event:MouseEvent):void
		{
			MoveScaleRotationLevel.getInstance().xyzMoveData=xyzPosData;
		}
		
		 
		/**
		 * 关闭
		 * */
		private function close():void{
			win.close();
		}
		
		private function showParticleFile():void{
			
			var file:File=new File
			if(particleInfo&&particleInfo.particleUrl){
				var lastFile:File=new File(Scene_data.fileRoot+particleInfo.particleUrl);
				if(lastFile.exists){
					file=lastFile.parent
				}
			}
			//var fileaa:File =new File(FilePathManager.getInstance().getPathByUid("expToH5"));

			var filefilter:FileFilter = new FileFilter("请选择","*.lyf");
			file.browse([filefilter]);
			file.addEventListener(Event.SELECT,onParticleSel);
		}
		private function onParticleSel(event:Event):void{
			var file:File = event.target as File;
			var url:String = file.url.replace(Scene_data.fileRoot,"");
			
			particleInfo = new Object;
			particleInfo.particleUrl = url
			//particleLabel.text = particleInfo.particleUrl; 
			particleTxt.text =decodeURI( url);


			
			refreshInfo();
		}

		public function refreshInfo():void{
			_info.data = getAllInfo();
			_info.type = 2;
		}
		
		/**
		 * 确定所配置的信息
		 * */
		public function sureInfo():void{
			if(!particleInfo || !particleInfo.particleUrl){
				Alert.show("没有添加粒子","警告");
				return;
			}
			
			_info.data = getAllInfo();
			_info.type = 2;
			if(Boolean(_fun)){
				_fun(_info);
			}
			
			addBtn.visible = false;
			//close();
		}
		
		public function getAllInfo():Object{
			var index:int = cbox.selectIndex;
			var type:int = 0;
			
			var typeInfo:Object;
			
			var bInfo:Object;
			bInfo = new Object;
			typeInfo = bInfo;
			
			if(index == 0){
				bInfo.pos = fixPos.ve3Data;
				bInfo.rotation = fixRotation.ve3Data;
				
				type = 0;
			}else if(index == 1){
				type = 1;
			}else if(index == 2){
				if(socketCb && socketCb.selectData){
					bInfo.socket = socketCb.selectData.name;
				}else{
					bInfo.socket = "none";
				}
				type = 0;
			}
			
			var resultObj:Object = new Object;
			resultObj.type = type;
			resultObj.typeInfo = typeInfo;
			resultObj.particleInfo = particleInfo;
			resultObj.index = index;
			
			return resultObj;
		}
		
		public function setAllInfo(obj:Object):void{
			var data:Object = obj.data;
			
			_selectIndex = data.index;
			
			if(vs){
				vs.selectedIndex = _selectIndex;
			}
			if(cbox){
				cbox.selectIndex = _selectIndex;
			}
			particleInfo = data.particleInfo;

			if(particleTxt){
				particleTxt.text =decodeURI( particleInfo.particleUrl);

			}	
			var type:int = data.type;
			
			var typeInfo:Object;
			
			var bInfo:Object = data.typeInfo;
			
			if(_selectIndex == 0){
				
				if(fixPos){
					fixPos.ve3Data = new Vector3D(bInfo.pos.x,bInfo.pos.y,bInfo.pos.z);
					posChange(fixPos.ve3Data);
				}
				
				if(fixRotation){
					fixRotation.ve3Data = new Vector3D(bInfo.rotation.x,bInfo.rotation.y,bInfo.rotation.z);
					rotationChange(fixRotation.ve3Data);
				}
				
			}else if(_selectIndex == 2){
				if(socketCb){
					socketCb.selectItem = bInfo.socket;
				}
			}
			
		

		}
		
		private function showConfigPanel():void{
			configPointPanle.show(_configData);
		}
		
		
		protected function socket_creationCompleteHandler(event:FlexEvent):void
		{
			var _socketList:Array = BonePanel.getInstance().getAllInfo().socket as Array;
			
			var obj:Object = new Object;
			obj.name = "none";
			_socketList.push(obj);
			
			if(socketCb){
				socketCb.data = _socketList;
			}
		
			onCreatCom();
			refreshInfo();
		}
	
		
		public function changeSocket(obj:Object):void{
			refreshInfo();
		}
		
	]]>
</fx:Script>
	<cbox:ComLabelBox id="cbox" x="0" y="20" label="类型："/>
	<mx:ViewStack id="vs" x="20" y="50" width="347" height="80">
		<mx:Canvas mouseOver="posMouseOverHandler(event)">
			<txt:TextVec3Input id="fixPos" label="位置："/>
			<txt:TextVec3Input id="fixRotation" label="旋转：" y="30"/>
		</mx:Canvas>
		<mx:Canvas>
			<mx:Button label="设置测试点" x="25" paddingTop="-2" height="20" click="showConfigPanel()"/>
		</mx:Canvas>
		<mx:Canvas creationComplete="socket_creationCompleteHandler(event)"> 
			<cbox:ComLabelBox id="socketCb" label="插孔：" changFun="changeSocket"/>
		</mx:Canvas>
	</mx:ViewStack>

	<curves:GapLineUI y="110" x="16" lineWidth="400"/>
	<txt:TextLabelEnabel id="particleTxt" x="25" y="120" height="20" width="400" label="粒子路径："/>
	<mx:Button label="选择" x="45" paddingTop="-2" height="20" y="142" click="showParticleFile()"/>
	
	<mx:Button id="addBtn" x="20" y="200" label="添加" click="sureInfo()" visible="{!_editMode}"/>
	
	
</frame:BasePanel>
