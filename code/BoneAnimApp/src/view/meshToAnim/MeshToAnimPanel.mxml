<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="338" height="500" creationComplete="search()">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
<fx:Script>
	<![CDATA[
		import com.maclema.mysql.ResultSet;
		
		import db.DBManager;
		
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		
		import view.action.ActionPanel;
		import view.mesh.MeshPanel;
		
		private var isFirst:Boolean = true;
		private var _meshUrl:String;
		private var _animUrl:String;
		
		private var meshAry:ArrayCollection;
		private var animAry:ArrayCollection;
		[Bindable]
		private var relationAry:ArrayCollection;
		/**
		 * 显示
		 * */
		public function show(container:DisplayObjectContainer):void{
			if(isFirst){
				this.x = 480;
				this.y = 40;
			}
			container.addChild(this);
			isFirst = false;
			
			search()
		}
		public function search():void{
			
			_meshUrl = getMeshUrl();
			_animUrl = getAnimUlr();
			
			searchMesh();
			searchAnim();
		}
		private function searchAnim():void{
			var sql:String =  "select * from t_avatars_act where f_name='" + _animUrl +"'";
			DBManager.getInstance().executeQuery(sql,queryAnimSuc,error);
		}
		private function queryAnimSuc(rs:ResultSet):void{
			var ary:ArrayCollection = new ArrayCollection;
			while(rs.next()){
				var obj:Object = new Object;
				obj.id = rs.getInt("f_id");
				obj.desc = rs.getString("f_desc");
				obj.version = rs.getInt("f_version");
				ary.addItem(obj);
			}
			animDg.dataProvider = animAry = ary;
		}
		private function searchMesh():void{
			var sql:String =  "select * from t_avatars_equ where f_name='" + _meshUrl +"'";
			DBManager.getInstance().executeQuery(sql,queryMeshSuc,error);
		}
		
		private function queryMeshSuc(rs:ResultSet):void{
			var ary:ArrayCollection = new ArrayCollection;
			while(rs.next()){
				var obj:Object = new Object;
				obj.id = rs.getInt("f_id");
				obj.desc = rs.getString("f_desc");
				ary.addItem(obj);
			}
			meshDg.dataProvider = meshAry = ary;
			
			searchRelation();
		}
		
		private function searchRelation():void{
			relationAry = new ArrayCollection;
			for(var i:int;i<meshAry.length;i++){
				var sql:String =  "select * from t_avatars_relation where f_avatar_id='" + meshAry[i].id +"'";
				DBManager.getInstance().executeQuery(sql,queryRelationSuc,error);
			}
		}
		private function queryRelationSuc(rs:ResultSet):void{
			while(rs.next()){
				var obj:Object = new Object;
				obj.id = rs.getInt("f_id");
				obj.meshID = rs.getInt("f_avatar_id");
				obj.animID = rs.getInt("f_action_id");
				relationAry.addItem(obj);
			}
		}
		private function error(value:*):void
		{
			trace(value);
		}
		
		public function close():void{
			if(this.parent){
				this.parent.removeChild(this);
			}
		}
		
		private function getMeshUrl():String{
			var obj:Object = MeshPanel.getInstance().getAllInfo();
			var ary:ArrayCollection = obj as ArrayCollection;
			if(ary && ary.length){
				obj = ary[0];
				ary = obj.children as ArrayCollection;
				if(ary && ary.length){
					obj = ary[0];
					var url:String = obj.url;
					if(url){
						var index:int;
						var strary:Array = new Array;
						while(index != -1){
							index = url.indexOf('/',index+1);
							strary.push(index);
						}
						index = strary[strary.length-2]+1;
						
						url = decodeURI(url.substr(0,index));
						return url;
					}
				}
			}
			return null;
		}
		
		private function getAnimUlr():String{
			var obj:Object = ActionPanel.getInstance().getAllInfo();
			var ary:Array = obj as Array;
			if(ary && ary.length){
				obj = ary[0];
				var url:String = obj.url;
				if(url){
					var index:int;
					var strary:Array = new Array;
					while(index != -1){
						index = url.indexOf('/',index+1);
						strary.push(index);
					}
					index = strary[strary.length-2]+1;
					
					url = decodeURI(url.substr(0,index));
					return url;
				}
			}
			return null
		}
		
		private function insertNew():void{
			if(!AppDataBone.isAuthorize){
				Alert.show("你没有权限！");
			}
			if(!(meshAry && meshAry.length && animAry && animAry.length)){
				Alert.show("mesh或 动作 未导出！！！");
				return;
			}
			var animID:int = animAry[0].id;
			for(var i:int;i<meshAry.length;i++){
				var sql:String;
				if(hasInRelation(meshAry[i].id)){
					sql = "update t_avatars_relation set f_action_id=" + animID + " where f_avatar_id=" + meshAry[i].id;
				}else{
					sql =  "insert into t_avatars_relation (f_avatar_id,f_action_id) value(" + meshAry[i].id + "," + animID + ");";
				}
				DBManager.getInstance().executeUpdate(sql,insertSuc,error);
			}
			searchRelation();
		}
		
		private function hasInRelation(idNum:int):Boolean{
			for(var i:int;i<relationAry.length;i++){
				if(relationAry[i].meshID == idNum){
					return true;
				}
			}
			return false;
		}
		
		private function insertSuc(obj:Object=null):void{
		}
		
	]]>
</fx:Script>
	<mx:Panel width="100%" height="100%"/>
	<mx:Label x="6" y="5" width="255" height="26" fontWeight="bold" mouseDown="startDrag()" click="this.parent.setChildIndex(this,this.parent.numChildren-1)"
			  mouseUp="stopDrag()" text="Mesh\anim对应关系"/>
	<mx:Button y="6" right="10" width="28" label="X" click="close()"/>
	
	<mx:DataGrid id="meshDg" x="12" y="52" width="316" height="120">
		<mx:columns>
			<mx:DataGridColumn dataField="id" headerText="id" width="80"/>
			<mx:DataGridColumn dataField="desc" headerText="描述" />
		</mx:columns>
	</mx:DataGrid>
	<mx:DataGrid id="animDg" x="12" y="195" width="316" height="73">
		<mx:columns>
			<mx:DataGridColumn dataField="id" headerText="id" width="80"/>
			<mx:DataGridColumn dataField="desc" headerText="描述" />
		</mx:columns>
	</mx:DataGrid>
	<mx:DataGrid x="12" y="294" width="316" height="159" dataProvider="{relationAry}">
		<mx:columns>
			<mx:DataGridColumn dataField="id" headerText="id"/>
			<mx:DataGridColumn dataField="meshID" headerText="meshId" />
			<mx:DataGridColumn dataField="animID" headerText="animId" />
		</mx:columns>
	</mx:DataGrid>
	<mx:Label x="2" y="32" color="#FF0000" fontSize="14" fontWeight="bold" text="装备武器表"/>
	<mx:Label x="2" y="175" color="#FF0000" fontSize="14" fontWeight="bold" text="动作表"/>
	<mx:Label x="2" y="274" color="#FF0000" fontSize="14" fontWeight="bold" text="关系表"/>
	
	<mx:Button x="134" y="469" label="插入/更新" click="insertNew()"/>
</mx:Canvas>
