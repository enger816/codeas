<?xml version="1.0" encoding="utf-8"?>
<frame:BasePanel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="326" height="280" xmlns:frame="common.utils.frame.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
<fx:Script>
	<![CDATA[
		import _Pan3D.core.MathCore;
		import _Pan3D.particle.ctrl.ParticleManager;
		import _Pan3D.texture.TextureManager;
		
		import _me.Scene_data;
		
		import flash.display3D.textures.Texture;
		
		import utils.FileConfigUtils;
		private static var instance:ConfigPanle;
		private var isFirst:Boolean = true;
		public var baseX:int = 200;
		public var baseY:int = 50;
		public static function getInatane():ConfigPanle{
			if(!instance){
				instance = new ConfigPanle;
			}
			return instance;
		}
		public function showUI(container:DisplayObjectContainer):void{
			if(isFirst){
				var str:String = FileConfigUtils.readConfig().configPanlePos;
				if(!str){
					this.x = baseX;
					this.y = baseY;
				}else{
					var ary:Array = str.split("|");
					this.x = ary[0];
					this.y = ary[1];
				}
			}
			
			container.addChild(this);
			isFirst = false;
		}
		public function mouseUpDrag():void{
			this.stopDrag();
			FileConfigUtils.writeConfig("configPanlePos",this.x + "|" + this.y);
		}
		private function close():void{
			if(this.parent){
				this.parent.removeChild(this);
			}
		}
		private function sel2D():void{
			AppDataBone.is3d = false;
			AppDataBone.isHengban = false;
			//Scene_data.focus3D.x = 0;
			//Scene_data.focus3D.z = 0;
			//txt_changeHandler();
			
			Scene_data.focus3D.x = 0;
			Scene_data.focus3D.z = 0;
			
			if(AppDataBone.role){
				AppDataBone.role.rotationY = 0;
			}
			
			Scene_data.focus3D.angle_y = 45;
			Scene_data.focus3D.angle_x = -30;
			
			MathCore._catch_cam(Scene_data.cam3D, Scene_data.focus3D,Scene_data.shake3D);
			
			//MathCore._catch_cam(
			
			ParticleManager.getInstance().refreshCam();
			
		}
		private function sel3D():void{
			AppDataBone.is3d = true;
			AppDataBone.isHengban = false;
			
			if(AppDataBone.role){
				AppDataBone.role.rotationY = 0;
			}
		}
		
		
		private function selHengBan():void{
			AppDataBone.is3d = false;
			AppDataBone.isHengban = true;
			
			Scene_data.focus3D.x = 0;
			Scene_data.focus3D.z = 0;
			
			if(AppDataBone.role){
				AppDataBone.role.rotationY = 0;
			}
			
			Scene_data.focus3D.angle_y = 45;
			Scene_data.focus3D.angle_x = -10;
		}
		
		protected function txt_changeHandler(event:Event=null):void
		{
			Scene_data.mainScale = Number(txt.text);
			//math2Ddata();
			AppDataBone.role.updataPos();
			
			//ParticleManager.getInstance().getParticle()
			
		}
		
		/* public function math2Ddata():void
		{
			Scene_data.sw2D=1000*Scene_data.mainScale/Scene_data.stageWidth
			Scene_data.tx2D=-Scene_data.stageWidth/Scene_data.mainScale;
			Scene_data.sinAngle2D=Math.sin(Math.abs(Scene_data.focus3D.angle_x)*Math.PI/180);
			Scene_data.ty2D=Scene_data.stageHeight/Scene_data.mainScale/Scene_data.sinAngle2D
		} */
		
		private function antiAlias():void{
			var num:int;
			switch(hs.value)
			{
				case 0:
					num = 0;
					break;
				case 1:
					num = 2;
					break;
				case 2:
					num = 4;
					break;
				case 3:
					num = 16;
					break;
				
			}
			Scene_data.antiAlias = num;
			Scene_data.context3D.configureBackBuffer(Scene_data.stageWidth, Scene_data.stageHeight,Scene_data.antiAlias, true);
		}
		
		private function loadImg():void{
			var file:File = new File;
			file.browseForOpen("选择背景");
			file.addEventListener(Event.SELECT,onSel);
		}
		
		protected function onSel(event:Event):void
		{
			var url:String = event.target.url;
			AppDataBone.backLevel.backGround.setInfoData(0.990,url);
		}
		
		protected function cb_clickHandler(event:MouseEvent):void
		{
			if(AppDataBone.particle && AppDataBone.particle.particle){
				AppDataBone.particle.particle.visible = cb.selected;
			}
		}
		private function effectChg():void{
			Scene_data.effectsLev = int(renderLev.selectedValue);
		}
		
		protected function txt0_changeHandler(event:Event):void
		{
			var fscale:Number = Number(txt0.text)
			AppDataBone.role.fileScale = fscale;
			AppDataBone.role.updataPos();
			AppDataBone.fileScale = fscale;
		}
		
	]]>
</fx:Script>
	<mx:Panel width="100%" height="100%"/>
	<mx:RadioButton x="17" y="46" label="3D视角" selected="true" click="sel3D()"/>
	<mx:RadioButton x="120" y="46" label="2.5游戏视角" click="sel2D()"/>
	<mx:RadioButton x="17" y="68" label="横版视角" click="selHengBan()"/>
	<mx:TextInput id="txt" x="17" y="105" width="98" text="2.55" change="txt_changeHandler(event)"/>
	<mx:TextInput id="txt0" x="17" y="165" width="98" text="{AppDataBone.fileScale}" change="txt0_changeHandler(event)"/>
	<mx:Button x="121" y="165" label="骨骼缩放比例"/>
	<mx:Button x="121" y="105" label="人物比例大小（2.5D下生效）"/>
	<mx:Button x="18" y="132" width="163" label="添加背景(最大2048)" click="loadImg()"/>
	<mx:HSlider id="hs" x="17" y="223" width="170" maximum="3" minimum="0" snapInterval="1" change="antiAlias()"/>
	<mx:Button x="199" y="223" label="抗锯齿等级"/>
	<mx:Label x="6" y="5" width="253" height="26" mouseDown="startDrag()" mouseUp="mouseUpDrag()" click="this.parent.setChildIndex(this,this.parent.numChildren-1)"
			  text="配置"/>
	<mx:Button x="286" y="6" width="28" label="X" click="close()"/>
	<mx:CheckBox x="21" y="198" label="是否显示阴影" selected="true" id="cb" click="cb_clickHandler(event)"/>
	
	<mx:RadioButtonGroup id="renderLev"/>
	<mx:RadioButton left="21" bottom="10" label="关闭" groupName="renderLev" value="-1" click="effectChg()"/>
	<mx:RadioButton left="75" bottom="10" label="低" groupName="renderLev" value="0"  click="effectChg()"/>
	<mx:RadioButton left="117" bottom="10" label="中" groupName="renderLev" value="1" click="effectChg()"/>
	<mx:RadioButton left="158" bottom="10" label="高" click="effectChg()" groupName="renderLev"
					selected="true" value="2"/>
</frame:BasePanel>
