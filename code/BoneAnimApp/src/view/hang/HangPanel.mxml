<?xml version="1.0" encoding="utf-8"?>
<frame:BasePanel xmlns:fx="http://ns.adobe.com/mxml/2009" horizontalScrollPolicy="off" verticalScrollPolicy="off"
		  xmlns:s="library://ns.adobe.com/flex/spark" creationComplete="onCom()"
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="296" height="300" xmlns:frame="common.utils.frame.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
<fx:Script>
	<![CDATA[
		import _Pan3D.base.MeshData;
		import _Pan3D.particle.ctrl.ParticleManager;
		import _Pan3D.role.MeshDataManager;
		
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.events.ListEvent;
		
		import utils.FileConfigUtils;
		
		import view.exp.ExpBuffPanle;
		import view.mesh.MeshBindPanle;
		
		private static var _instance:HangPanel;
		
		[Bindable]
		private var dataAry:ArrayCollection = new ArrayCollection;
		private var info:Object;
		private var isFirst:Boolean = true;
		public var expPanle:ExpBuffPanle = new ExpBuffPanle;
		public static function getInstance():HangPanel{
			if(!_instance){
				_instance = new HangPanel;
			}
			return _instance;
		}
		private function onCom():void{
			draw();
			list.setStyle("contentBackgroundColor",0x404040);
		}
		private function draw():void{
			ui.graphics.clear();
			ui.graphics.lineStyle(1,0x999999);
			ui.graphics.moveTo(75,0);
			ui.graphics.lineTo(75,list.height);
			
			var num:int = list.height/20;
			for(var i:int;i<num;i++){
				ui.graphics.moveTo(0,20*i+20);
				if(num < dataAry.length){
					ui.graphics.lineTo(258,20*i+20);
				}else{
					ui.graphics.lineTo(274,20*i+20);
				}
			}
		}
		
		
		public function addBoneFile():void{
			MeshBindPanle.getInstance().show(this.parentDocument.parent,null,onParticle);
		}
		public function onParticle(obj:Object):void{
			if(dataAry.getItemIndex(obj) == -1){
				dataAry.addItem(obj);
			}
			
		}
		
//		private var lastFileOpenUrl:String;
//		public function addBoneFile():void{
//			info = new Object;
//			if(!lastFileOpenUrl){
//				lastFileOpenUrl = FileConfigUtils.readConfig().lyfUrl;
//			}
//			var file:File = new File(lastFileOpenUrl);
//			file.browseForOpen("打开粒子文件",[new FileFilter("lyf文件","*.lyf")]);
//			file.addEventListener(Event.SELECT,onSel);
//		}
//		private function onSel(event:Event):void{
//			var file:File = event.target as File;
//			info.nativePath = file.nativePath;
//			info.url = file.url;
//			//info.fileName = String(file.name).split(".")[0];
//			info.fileName = file.name;
//			//addAnim(file.url,file.name);
//			dataAry.addItem(info);
//			ParticleManager.getInstance().addParticleByUrl(info.url,info);
//			
//			lastFileOpenUrl = file.parent.url;
//			FileConfigUtils.writeConfig("lyfUrl",lastFileOpenUrl);
//		}
		
		
		public function showUI(container:DisplayObjectContainer):void{
			if(isFirst){
				var str:String = FileConfigUtils.readConfig().hangPanlePos;
				if(!str){
					this.x = 1000;
					this.y = 50;
				}else{
					var ary:Array = str.split("|");
					this.x = ary[0];
					this.y = ary[1];
				}
			}
			
			container.addChild(this);
			isFirst = false;
		}
		private function onResizeDown():void{
			stage.addEventListener(MouseEvent.MOUSE_MOVE,onMouseMove);
			stage.addEventListener(MouseEvent.MOUSE_UP,onMouseUp);
		}
		private function onMouseMove(event:MouseEvent):void{
			this.height = stage.mouseY - this.y;
			if(this.height < 120){
				this.height = 120;
			}
			draw();
		}
		private function onMouseUp(event:MouseEvent):void{
			stage.removeEventListener(MouseEvent.MOUSE_MOVE,onMouseMove);
			stage.removeEventListener(MouseEvent.MOUSE_UP,onMouseUp);
			draw();
		}
		
		private function close():void{
			if(this.parent){
				this.parent.removeChild(this);
			}
		}
		
		public function getAllInfo():Object{
			var ary:Array = new Array;
			for(var i:int;i<dataAry.length;i++){
				ary.push(copyData(dataAry[i]));
			}
			return ary;
		}
		
		private function copyData(source:Object):Object{
			var obj:Object = new Object;
			for(var key:String in source){
				if(key != "particle" && key!= "bindTarget"){
					obj[key] = source[key];
				}
			}
			return obj;
		}
		public var fileInfo:Array;
		public function setAllInfo():void{
			if(!fileInfo){
				return;
			}
			dataAry = new ArrayCollection;
			for(var i:int;i<fileInfo.length;i++){
				var obj:Object = fileInfo[i];
				obj.bindTarget = AppDataBone.role;
				dataAry.addItem(obj);
				ParticleManager.getInstance().addParticleByUrl(obj.particleUrl,obj);
			}
		}
		
		
		public function del():void{
			ParticleManager.getInstance().removeParticle(list.selectedItem.particle);
			dataAry.removeItemAt(list.selectedIndex);
		}
		
		public function mouseUpDrag():void{
			this.stopDrag();
			FileConfigUtils.writeConfig("hangPanlePos",this.x + "|" + this.y);
		}
		
		protected function itemDoubleClick(event:ListEvent):void
		{
			MeshBindPanle.getInstance().show(this.parentDocument.parent,list.selectedItem,onParticle);
		}
		
		public function showExp(data:Object):void{
			expPanle.show(this.parent,data);
		}
		
	]]>
</fx:Script>
	<!--<mx:Panel width="100%" height="100%"/>-->
	<mx:List id="list" left="10" top="10" bottom="45" right="10" dataProvider="{dataAry}" itemDoubleClick="itemDoubleClick(event)" borderStyle="none" doubleClickEnabled="true">
		<mx:itemRenderer>
			<fx:Component>
				<mx:Canvas height="16" backgroundColor="#eeeeee" rightClick="rightClickHandler(event)">
					<fx:Script>
						<![CDATA[
							import db.DBManager;
							
							import mx.collections.ArrayCollection;
							import mx.controls.Alert;
							import mx.events.ListEvent;

							private var sqlId:int;
							
							protected function rightClickHandler(event:MouseEvent):void
							{
								var _menuFile:NativeMenu = new NativeMenu();  
								var addType:NativeMenuItem = new NativeMenuItem("导出buff");  
								addType.addEventListener(Event.SELECT,onMenuAddTpye);
								
								_menuFile.items = [addType];  
								_menuFile.display(stage,stage.mouseX,stage.mouseY);
							}
							
							private function onSel():void{
								data.visible = data.particle.visible = cb.selected;
 							}
							
							protected function onMenuAddTpye(event:Event):void{
								onExpSel();
								return;
								var sql:String =  "insert into t_avatars_buff (source_id,source_name) value(" + data.id +" , '" + data.name + "');";
								DBManager.getInstance().executeUpdate(sql,insertSuc,error);
								
							}
							
							private function insertSuc(obj:Object=null):void{
								
								sqlId = obj.insertID;
								onExpSel();
							}
							
							private function error(value:*):void
							{
								trace(value)
							}
							
							private function onExpSel():void
							{
								var obj:Object = new Object;
								obj.id = data.id;
								obj.name = data.name;
								
								obj.bindIndex = data.bindIndex;
								
								if(data.bindOffset){
									obj.bindOffset = data.bindOffset;
								}
								
								if(data.bindRatation){
									obj.bindRatation = data.bindRatation;
								}
								
								if(data.nonrotation){
									obj.nonrotation = true;
								}
								
								outerDocument.showExp(obj);
								return;
								var file:File = new File(File.desktopDirectory.url + "/buff/bid" + sqlId + ".lyfb")
								var fs:FileStream = new FileStream;
								fs.open(file,FileMode.WRITE);
								fs.writeObject(obj);
								fs.close();
								Alert.show("导出成功\n已经保存到桌面 buff/bid" + sqlId + ".lyfb");
							}
							
						]]>
					</fx:Script>
					<mx:CheckBox id="cb" selected="{data.visible}" click="onSel()"/>
					<mx:Label text="{data.id}" y="-2" width="100%" x="40"/>
					<mx:Label text="{data.name}" y="-2" width="100%" x="80"/>
				</mx:Canvas>
			</fx:Component>
		</mx:itemRenderer>
	</mx:List>
	<mx:Button x="10" bottom="16" label="添加" click="addBoneFile()"/>
	<mx:Button x="88" bottom="16" label="删除" click="del()" />
	<!--<mx:Label x="6" y="5" width="253" height="26" fontWeight="bold" mouseDown="startDrag()"
			  mouseUp="mouseUpDrag()" text="悬挂管理"/>-->
	<!--<mx:Button right="0" bottom="0" width="8" height="8" mouseDown="onResizeDown()"/>-->
	<!--<mx:Button x="258" y="6" width="28" label="X" click="close()"/>-->
	<mx:UIComponent id="ui" x="10" y="60" visible="false"/>
	<!--<mx:Label x="16" y="40" text="悬挂列表"/>-->
</frame:BasePanel>
