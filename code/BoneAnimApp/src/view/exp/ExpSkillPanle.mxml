<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="288" height="480">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
<fx:Script>
	<![CDATA[
		import _Pan3D.skill.vo.EnumSkillKeyType;
		import _Pan3D.skill.vo.SkillKeyVo;
		import _Pan3D.skill.vo.SkillTimeLineVo;
		import _Pan3D.skill.vo.effect.EffectSkillVo;
		import _Pan3D.skill.vo.effect.EnumEffectType;
		import _Pan3D.skill.vo.traject.EnumTrajectoryType;
		import _Pan3D.skill.vo.traject.TrajectoryDynamicPointVo;
		import _Pan3D.skill.vo.traject.TrajectoryDynamicTargetVo;
		import _Pan3D.skill.vo.traject.TrajectoryFiexPointVo;
		
		import _me.Scene_data;
		
		import com.maclema.mysql.ResultSet;
		
		import db.DBManager;
		
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.events.CloseEvent;
		import mx.events.ListEvent;
		
		import utils.FileConfigUtils;
		/**
		 * 是否为第一次打开
		 * */
		private var isFirst:Boolean = true;
		/**
		 * 技能信息
		 * */
		private var _info:Object;
		private var _defaultStr:String = "输入对此技能的描述";
		/**
		 * 技能名称
		 * */
		private var _skillName:String;
		/**
		 * 选中的数据
		 * */
		private var selectObj:Object;
		/**
		 * 起手延迟
		 * */
		private var beforeTime:Number;
		/**
		 * 技能显示类型
		 * */
		private var _showType:int;
		
		private var actionNameId:int;
		public function show(container:DisplayObjectContainer,obj:Object,skillName:String):void{
			container.addChild(this);
			
			if(isFirst){
 				var str:String = FileConfigUtils.readConfig().expSkillPanlePos;
				if(!str){
					this.x = (container.width - this.width)*0.5;
					this.y = (container.height - this.height)*0.5;
				}else{
					var arys:Array = str.split("|");
					this.x = arys[0];
					this.y = arys[1];
				}
			}
			isFirst = false;
			
			_info = obj;
			_skillName = skillName;
			var actionName:String = _info.action;
			if(!actionName){
				actionNameId = 0;
			}else{
				if(actionName.indexOf("attack") != -1){
					var ary:Array = actionName.split("_");
					if(ary.length >= 2){
						actionNameId = ary[ary.length-1];
					}else{
						actionNameId = 0;
					}
				}
			}
			setData();
			getBeforeTime();
			_showType = getType(obj);
		}
		/**
		 * 计算出手时间
		 * */
		private function getBeforeTime():void{
			var infoAry:Array = _info.infoAry;
			var frameNum:int;
			if(infoAry.length){
				frameNum = infoAry[0].frameNum;
			}
			beforeTime = Scene_data.frameTime * frameNum;
		}
		
		
		
		/**
		 * 数据查询
		 * */
		public function setData():void{
			var sql:String =  "select * from t_avatars_skill where f_name='" + _skillName +"'";
			DBManager.getInstance().executeQuery(sql,querySuc,error);
		}
		
		private function error(value:*):void
		{
			trace(value)
		}
		/**
		 * 查询成功
		 * */
		private function querySuc(rs:ResultSet):void{
			var ary:Object = new ArrayCollection;
			while(rs.next()){
				var obj:Object = new Object;
				obj.id = rs.getInt("f_id");
				obj.desc = rs.getString("f_desc");
				obj.version = rs.getInt("f_version");
				obj.type = rs.getInt("f_type");
				obj.name = rs.getString("f_name");
				ary.addItem(obj);
			}
			dg.dataProvider = ary;
			expTitle.text = "正在导出:" + _skillName;
		}
		
		
		public function mouseUpDrag():void{
			this.stopDrag();
			FileConfigUtils.writeConfig("expSkillPanlePos",this.x + "|" + this.y);
		}
		
		protected function descTxt_clickHandler(event:MouseEvent):void{
			if(descTxt.text == _defaultStr){
				descTxt.text = "";
			}
			
		}
		
		protected function dg_itemClickHandler(event:ListEvent):void
		{
			descTxt.text = dg.selectedItem.desc;
			typeTxt.text = dg.selectedItem.type;
		}
		/**
		 * 更新技能
		 * */
		private function updateSkill():void{
			if(!AppDataBone.isAuthorize){
				Alert.show("你没有权限！");
			}
			selectObj = dg.selectedItem;
			if(!selectObj){
				Alert.show("请选择要更新的条目")
				return;
			}
			var sql:String = "update t_avatars_skill set f_version=" + (selectObj.version+1) + ",f_desc='" + descTxt.text + "',f_type=" + typeTxt.text + ",f_playBefore_delay=" + beforeTime + ",f_showType=" +　_showType　 +　",f_action=" + actionNameId + ",f_name='" + _skillName + "' where f_id=" + selectObj.id;
			DBManager.getInstance().executeUpdate(sql,updateSuc,error);
			
		}
		/**
		 * 更新成功，根据更新成功的id导出技能文件
		 * */
		public function updateSuc(value:Object):void{
			
			var rootUrl:String = File.desktopDirectory.url + "/skill/";
			
			if(AppDataBone.projectType == 3){
				rootUrl = File.desktopDirectory.url + "/fs/skill/";
			}
			
			var file:File = new File(rootUrl + selectObj.id + ".zzwskill")
			var fs:FileStream = new FileStream;
			fs.open(file,FileMode.WRITE);
			fs.writeObject(_info);
			fs.close();
			Alert.show("更新成功\n已经保存到桌面 skill/" + selectObj.id + ".zzwskill");
			setData();
		}
		/**
		 * 插入技能
		 * */
		private function insertSkill():void{
			if(!AppDataBone.isAuthorize){
				Alert.show("你没有权限！");
			}
			if(descTxt.text == _defaultStr){
				Alert.show("你还没有输入对该技能的描述");
				return;
			}
			var sql:String =  "insert into t_avatars_skill (f_name,f_desc,f_type,f_playBefore_delay,f_showType,f_action) value('" + _skillName +"' , '" + descTxt.text + "','" + typeTxt.text + "'," + beforeTime + "," + _showType + "," + actionNameId + ");";
			DBManager.getInstance().executeUpdate(sql,insertSuc,error);
		}
		/**
		 * 技能插入成功 根据插入的技能生成相应的文件
		 * */
		private function insertSuc(obj:Object=null):void{
			var sqlId:int = obj.insertID;
			
			var rootUrl:String = File.desktopDirectory.url + "/skill/";
			
			if(AppDataBone.projectType == 3){
				rootUrl = File.desktopDirectory.url + "/fs/skill/";
			}
			
			var file:File = new File( rootUrl + sqlId + ".zzwskill")
			var fs:FileStream = new FileStream;
			fs.open(file,FileMode.WRITE);
			fs.writeObject(_info);
			fs.close();
			Alert.show("插入成功\n已经保存到桌面 skill/" + sqlId + ".zzwskill");
			setData();
		}
		
		private function close():void{
			if(this.parent){
				this.parent.removeChild(this);
			}
		}
		/**
		 * 查询技能
		 * */
		private function search():void{
			var sql:String =  "select * from t_avatars_skill where f_name like '%" + searchTxt.text + "%'";
			DBManager.getInstance().executeQuery(sql,querySuc,error);
		}
		
		private var delObj:Object;
		/**
		 * 删除技能
		 * */
		private function delSkill():void{
			if(!AppDataBone.isAuthorize){
				Alert.show("你没有权限！");
			}
			delObj = dg.selectedItem;
			if(delObj){
				
				Alert.show("确认删除？","警告",Alert.YES | Alert.NO,null,sureDel);
			}
			
		}
		
		private function sureDel(evt:CloseEvent):void{
			if(evt.detail == 1){
				var sql:String =  "delete from t_avatars_skill  where (F_id=" + delObj.id + ")";
				DBManager.getInstance().executeUpdate(sql,delSuc,error);
			}
		}
		
		private function delSuc(obj:Object=null):void{
			Alert.show("删除成功");
			setData();
		}
		/**
		 * 获取技能的显示类型
		 * */
		private function getType(obj:Object):int{
			
			var skillTimeLineVo:SkillTimeLineVo = new SkillTimeLineVo();
			skillTimeLineVo.setInfo(obj);
			
			if(skillTimeLineVo.infoVec.length == 0){
				return 0;
			}
			
			var skillKeyVo:SkillKeyVo = skillTimeLineVo.infoVec[0];
			
			if(skillKeyVo.type == EnumSkillKeyType.TRAJECTORY){
				if(skillKeyVo is TrajectoryDynamicTargetVo){
					return 1;
				}else if(skillKeyVo is TrajectoryDynamicPointVo){
					return 3;
				}else if(skillKeyVo is TrajectoryFiexPointVo){
					return 2;
				}
			}else if(skillKeyVo.type == EnumSkillKeyType.EFFECT){
				if(EffectSkillVo(skillKeyVo).effectType == EnumEffectType.DYNAMIC_POINT){
					return 5;
				}else if(EffectSkillVo(skillKeyVo).effectType == EnumEffectType.FIXED_POINT){
					return 4;
				}
			}
			
			return 0;
		}
		
	]]>
</fx:Script>
	<mx:Panel width="100%" height="100%"/>
	<mx:Label id="expTitle" x="13" y="44" width="265" text="正在导出：1.lyf"/>
	<mx:TextArea id="descTxt" x="13" y="291" width="265" height="69" text="输入对此技能的描述" click="descTxt_clickHandler(event)"/>
	<mx:Label x="13" y="68" width="265" text="查询到已经存在可能相关技能"/>
	<mx:DataGrid id="dg" x="13" y="120" width="265" height="163" itemClick="dg_itemClickHandler(event)">
		<mx:columns>
			<mx:DataGridColumn dataField="id" headerText="id" width="30"/>
			<mx:DataGridColumn dataField="name" headerText="名称"/>
			<mx:DataGridColumn dataField="desc" headerText="描述" />
			<mx:DataGridColumn dataField="type" headerText="类型" width="45"/>
			<mx:DataGridColumn dataField="version" headerText="版本号" width="45" />
		</mx:columns>
	</mx:DataGrid>
	<mx:Button x="30" y="418" label="更新技能" click="updateSkill()"/>
	<mx:Button x="30" y="448" label="删除技能" click="delSkill()"/>
	<mx:Button x="110" y="418" label="插入技能" click="insertSkill()"/>
	<mx:Button x="112" y="447" label="关闭" click="close()"/>
	<mx:Label x="7" y="6" width="243" fontWeight="bold" text="技能导出"  mouseDown="startDrag()" mouseUp="mouseUpDrag()"/>
	<mx:TextInput id="typeTxt" x="68" y="378" width="32" text="1"/>
	<mx:Label x="13" y="379" text="技能类型"/>
	<mx:Label x="102" y="379" width="176" color="#FF0000" text="2为命中，3为起手，1为其他"/>
	
	<mx:TextInput id="searchTxt" x="14" y="90" width="130"/>
	<mx:Button x="153" y="90" label="搜索" click="search()"/>
</mx:Canvas> 