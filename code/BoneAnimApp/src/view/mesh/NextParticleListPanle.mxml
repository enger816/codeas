<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="186" height="270">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
<fx:Script>
	<![CDATA[
		import _Pan3D.particle.ctrl.CombineParticle;
		import _Pan3D.particle.ctrl.ParticleManager;
		
		import mx.collections.ArrayCollection;
		import mx.events.ListEvent;
		
		import utils.FileConfigUtils;
		public var info:Object;
		private var isFirst:Boolean = true;
		[Bindable]
		private var ary:ArrayCollection;
		
		public function show(container:DisplayObjectContainer,info:Object):void{
			container.addChild(this);
			
			if(isFirst){
				var str:String = FileConfigUtils.readConfig().MeshParticleListPanle;
				if(!str){
					this.x = (container.width - this.width)*0.5;
					this.y = (container.height - this.height)*0.5;
				}else{
					var arys:Array = str.split("|");
					this.x = arys[0];
					this.y = arys[1];
				}
			}
			isFirst = false;
			this.info = info;
			if(info.nextList){
				ary = new ArrayCollection;
				for(var i:int;i<info.nextList.length;i++){
					ary.addItem(info.nextList[i]);
				}
			}else{
				ary = null;
			}
		}
		public function addParticle():void{
			MeshBindPanle.getInstance().show(this.parentDocument.parent,null,onParticle);
		}
		public function onParticle(obj:Object):void{
			if(!info.nextList){
				info.nextList = new Array;
				ary = new ArrayCollection();
			}
			
			if(info.nextList.indexOf(obj) == -1){
				info.nextList.push(obj);
				ary.addItem(obj);
			}
			
			ary.refresh();
			
		}
		
		public function close():void{
			if(this.parent){
				this.parent.removeChild(this);
			}
		}
		public function del():void{
			var index:int = list.selectedIndex;
			var obj:Object = info.nextList[index];
			if(obj && obj.particle){
				ParticleManager.getInstance().removeParticle(obj.particle);
				info.nextList.splice(index,1);
				ary.removeItemAt(index);
				ary.refresh();
			}
		}
		
		protected function itemDoubleClick(event:ListEvent):void
		{
			MeshBindPanle.getInstance().show(this.parentDocument.parent,list.selectedItem,onParticle);
		}
		
		public function showPartileListPanle():void{
			
		}
		
		public function mouseUpDrag():void{
			this.stopDrag();
			FileConfigUtils.writeConfig("MeshParticleListPanle",this.x + "|" + this.y);
		}
		
		
	]]>
</fx:Script>
	<mx:Panel width="100%" height="100%"/>
	<mx:List id="list" x="13" top="43" bottom="42" width="161" dataProvider="{ary}"
			 doubleClickEnabled="true" itemDoubleClick="itemDoubleClick(event)">
		<mx:itemRenderer>
			<fx:Component>
				<mx:Canvas height="20" horizontalScrollPolicy="off">
					<mx:Label width="40" text="{data.indexID}" height="20" color="#ff0000" fontWeight="bold" />
					<mx:Label x="40" width="123" text="{data.isList? '绑定列表' : data.particleName}" height="20" buttonMode="true"/>
				</mx:Canvas>
			</fx:Component>
		</mx:itemRenderer>
	</mx:List>
	<mx:Button x="10" bottom="13" width="50" label="添加" click="addParticle()"/>
	<mx:Button x="69" bottom="13" width="50" label="清理" click="del()"/>
	<mx:Button x="127" bottom="13" width="50" label="关闭" click="close()"/>
	<mx:Label x="10" y="5" width="176" fontWeight="bold" text="二级绑定列表" mouseDown="startDrag()" mouseUp="mouseUpDrag()"/>
</mx:Canvas>